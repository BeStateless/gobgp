FROM statelesstestregistry.azurecr.io/stateless/base:9 as build

# Install build dependencies.
RUN apt-get update \
 && apt-get install --yes --no-install-recommends \
      ca-certificates \
      golang \
      stgit \
      unzip \
      wget \
 && rm -rf /var/lib/apt/lists/* \
 && cd /usr/local \
 && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-x86_64.zip \
 && unzip protoc*.zip \
 && rm protoc*.zip

WORKDIR /tmp/gobgp
COPY patch ./
COPY patches ./patches
RUN export GOPATH=/go \
 && export PATH="$GOPATH/bin:/usr/local/go/bin:$PATH" \
 && export GO111MODULE=on \
 && ./patch \
 && mkdir -p "$GOPATH/src" "$GOPATH/bin" \
 && chmod -R 777 "$GOPATH" \
 && mkdir -p $GOPATH/src/github.com/osrg \
 && mv gobgp $GOPATH/src/github.com/osrg \
 && rm -rf /tmp/gobgp \
 && cd $GOPATH/src/github.com/osrg/gobgp \
    # This is goofy, but we need to generate the GRPC with the version that GoBGP uses, but when we compile GoBGP we
    # need to use a newer version to fix a bug in GRPC. No matter what we have to do something weird. When we generate
    # the GRPC with the newer version it generates a bunch of garbage and makes the diffs very annoying.
 && sed -i 's|google.golang.org/grpc v1.24.0|google.golang.org/grpc v1.5.1|' go.mod \
 && go mod download \
 && go install github.com/golang/protobuf/protoc-gen-go \
 && export GOPROTO="$(GO111MODULE=on go list -f '{{ .Dir }}' -m github.com/golang/protobuf)" \
 && mkdir /gobgp-proto \
 && protoc -I"${GOPROTO}"/ptypes -I./api --go_out=plugins=grpc:/gobgp-proto ./api/*.proto

CMD cp /gobgp-proto/*.go /src/gobgp/api/
